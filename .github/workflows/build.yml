name: build-dev-toolbox
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**.txt'
  schedule:
    - cron: '20 20 * * *'  # 8:20pm everyday
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**.txt'
env:
    IMAGE_NAME: dev-toolbox
    IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  push-ghcr:
    name: Build and push image
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    permissions:
      contents: read
      packages: write
      id-token: write
    steps: 
      # Checkout push-to-registry action GitHub repository
      - name: Checkout Push to Registry action
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push
        id: build_and_push
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform}}
          push: true
          tags: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{github.sha}}
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      
      # Sign container
      - uses: sigstore/cosign-installer@main

      # Only needed when running `cosign sign` using a key
      - name: Write signing key to disk
        run: |
          echo "${{ env.COSIGN_PRIVATE_KEY }}" > cosign.key
          # DEBUG: get character count of key
          wc -c cosign.key
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Sign container image
        run: |
          cosign sign -y --key cosign.key ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}@${DIGEST}
        env:
          COSIGN_EXPERIMENTAL: false
          DIGEST: ${{ steps.build_and_push.outputs.digest }}

      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.push.outputs) }}"
